/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package Gel_BioInf_Models;  
@SuppressWarnings("all")
/** Chi-square test for goodness of fit of this sample to 1000 Genomes Phase 3 populations */
@org.apache.avro.specific.AvroGenerated
public class ChiSquare1KGenomesPhase3Pop extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ChiSquare1KGenomesPhase3Pop\",\"namespace\":\"Gel_BioInf_Models\",\"doc\":\"Chi-square test for goodness of fit of this sample to 1000 Genomes Phase 3 populations\",\"fields\":[{\"name\":\"kGSuperPopCategory\",\"type\":{\"type\":\"enum\",\"name\":\"KGSuperPopCategory\",\"doc\":\"1K Population\",\"symbols\":[\"AFR\",\"AMR\",\"EAS\",\"EUR\",\"SAS\"]},\"doc\":\"1K Super Population\"},{\"name\":\"kGPopCategory\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"KGPopCategory\",\"doc\":\"1K Super Population\",\"symbols\":[\"ACB\",\"ASW\",\"BEB\",\"CDX\",\"CEU\",\"CHB\",\"CHS\",\"CLM\",\"ESN\",\"FIN\",\"GBR\",\"GIH\",\"GWD\",\"IBS\",\"ITU\",\"JPT\",\"KHV\",\"LWK\",\"MSL\",\"MXL\",\"PEL\",\"PJL\",\"PUR\",\"STU\",\"TSI\",\"YRI\"]}],\"doc\":\"1K Population\"},{\"name\":\"chiSquare\",\"type\":\"float\",\"doc\":\"Chi-square test for goodness of fit of this sample to this 1000 Genomes Phase 3 population\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** 1K Super Population */
   public Gel_BioInf_Models.KGSuperPopCategory kGSuperPopCategory;
  /** 1K Population */
   public Gel_BioInf_Models.KGPopCategory kGPopCategory;
  /** Chi-square test for goodness of fit of this sample to this 1000 Genomes Phase 3 population */
   public float chiSquare;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ChiSquare1KGenomesPhase3Pop() {}

  /**
   * All-args constructor.
   */
  public ChiSquare1KGenomesPhase3Pop(Gel_BioInf_Models.KGSuperPopCategory kGSuperPopCategory, Gel_BioInf_Models.KGPopCategory kGPopCategory, java.lang.Float chiSquare) {
    this.kGSuperPopCategory = kGSuperPopCategory;
    this.kGPopCategory = kGPopCategory;
    this.chiSquare = chiSquare;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return kGSuperPopCategory;
    case 1: return kGPopCategory;
    case 2: return chiSquare;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: kGSuperPopCategory = (Gel_BioInf_Models.KGSuperPopCategory)value$; break;
    case 1: kGPopCategory = (Gel_BioInf_Models.KGPopCategory)value$; break;
    case 2: chiSquare = (java.lang.Float)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'kGSuperPopCategory' field.
   * 1K Super Population   */
  public Gel_BioInf_Models.KGSuperPopCategory getKGSuperPopCategory() {
    return kGSuperPopCategory;
  }

  /**
   * Sets the value of the 'kGSuperPopCategory' field.
   * 1K Super Population   * @param value the value to set.
   */
  public void setKGSuperPopCategory(Gel_BioInf_Models.KGSuperPopCategory value) {
    this.kGSuperPopCategory = value;
  }

  /**
   * Gets the value of the 'kGPopCategory' field.
   * 1K Population   */
  public Gel_BioInf_Models.KGPopCategory getKGPopCategory() {
    return kGPopCategory;
  }

  /**
   * Sets the value of the 'kGPopCategory' field.
   * 1K Population   * @param value the value to set.
   */
  public void setKGPopCategory(Gel_BioInf_Models.KGPopCategory value) {
    this.kGPopCategory = value;
  }

  /**
   * Gets the value of the 'chiSquare' field.
   * Chi-square test for goodness of fit of this sample to this 1000 Genomes Phase 3 population   */
  public java.lang.Float getChiSquare() {
    return chiSquare;
  }

  /**
   * Sets the value of the 'chiSquare' field.
   * Chi-square test for goodness of fit of this sample to this 1000 Genomes Phase 3 population   * @param value the value to set.
   */
  public void setChiSquare(java.lang.Float value) {
    this.chiSquare = value;
  }

  /** Creates a new ChiSquare1KGenomesPhase3Pop RecordBuilder */
  public static Gel_BioInf_Models.ChiSquare1KGenomesPhase3Pop.Builder newBuilder() {
    return new Gel_BioInf_Models.ChiSquare1KGenomesPhase3Pop.Builder();
  }
  
  /** Creates a new ChiSquare1KGenomesPhase3Pop RecordBuilder by copying an existing Builder */
  public static Gel_BioInf_Models.ChiSquare1KGenomesPhase3Pop.Builder newBuilder(Gel_BioInf_Models.ChiSquare1KGenomesPhase3Pop.Builder other) {
    return new Gel_BioInf_Models.ChiSquare1KGenomesPhase3Pop.Builder(other);
  }
  
  /** Creates a new ChiSquare1KGenomesPhase3Pop RecordBuilder by copying an existing ChiSquare1KGenomesPhase3Pop instance */
  public static Gel_BioInf_Models.ChiSquare1KGenomesPhase3Pop.Builder newBuilder(Gel_BioInf_Models.ChiSquare1KGenomesPhase3Pop other) {
    return new Gel_BioInf_Models.ChiSquare1KGenomesPhase3Pop.Builder(other);
  }
  
  /**
   * RecordBuilder for ChiSquare1KGenomesPhase3Pop instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ChiSquare1KGenomesPhase3Pop>
    implements org.apache.avro.data.RecordBuilder<ChiSquare1KGenomesPhase3Pop> {

    private Gel_BioInf_Models.KGSuperPopCategory kGSuperPopCategory;
    private Gel_BioInf_Models.KGPopCategory kGPopCategory;
    private float chiSquare;

    /** Creates a new Builder */
    private Builder() {
      super(Gel_BioInf_Models.ChiSquare1KGenomesPhase3Pop.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(Gel_BioInf_Models.ChiSquare1KGenomesPhase3Pop.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.kGSuperPopCategory)) {
        this.kGSuperPopCategory = data().deepCopy(fields()[0].schema(), other.kGSuperPopCategory);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.kGPopCategory)) {
        this.kGPopCategory = data().deepCopy(fields()[1].schema(), other.kGPopCategory);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.chiSquare)) {
        this.chiSquare = data().deepCopy(fields()[2].schema(), other.chiSquare);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ChiSquare1KGenomesPhase3Pop instance */
    private Builder(Gel_BioInf_Models.ChiSquare1KGenomesPhase3Pop other) {
            super(Gel_BioInf_Models.ChiSquare1KGenomesPhase3Pop.SCHEMA$);
      if (isValidValue(fields()[0], other.kGSuperPopCategory)) {
        this.kGSuperPopCategory = data().deepCopy(fields()[0].schema(), other.kGSuperPopCategory);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.kGPopCategory)) {
        this.kGPopCategory = data().deepCopy(fields()[1].schema(), other.kGPopCategory);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.chiSquare)) {
        this.chiSquare = data().deepCopy(fields()[2].schema(), other.chiSquare);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'kGSuperPopCategory' field */
    public Gel_BioInf_Models.KGSuperPopCategory getKGSuperPopCategory() {
      return kGSuperPopCategory;
    }
    
    /** Sets the value of the 'kGSuperPopCategory' field */
    public Gel_BioInf_Models.ChiSquare1KGenomesPhase3Pop.Builder setKGSuperPopCategory(Gel_BioInf_Models.KGSuperPopCategory value) {
      validate(fields()[0], value);
      this.kGSuperPopCategory = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'kGSuperPopCategory' field has been set */
    public boolean hasKGSuperPopCategory() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'kGSuperPopCategory' field */
    public Gel_BioInf_Models.ChiSquare1KGenomesPhase3Pop.Builder clearKGSuperPopCategory() {
      kGSuperPopCategory = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'kGPopCategory' field */
    public Gel_BioInf_Models.KGPopCategory getKGPopCategory() {
      return kGPopCategory;
    }
    
    /** Sets the value of the 'kGPopCategory' field */
    public Gel_BioInf_Models.ChiSquare1KGenomesPhase3Pop.Builder setKGPopCategory(Gel_BioInf_Models.KGPopCategory value) {
      validate(fields()[1], value);
      this.kGPopCategory = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'kGPopCategory' field has been set */
    public boolean hasKGPopCategory() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'kGPopCategory' field */
    public Gel_BioInf_Models.ChiSquare1KGenomesPhase3Pop.Builder clearKGPopCategory() {
      kGPopCategory = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'chiSquare' field */
    public java.lang.Float getChiSquare() {
      return chiSquare;
    }
    
    /** Sets the value of the 'chiSquare' field */
    public Gel_BioInf_Models.ChiSquare1KGenomesPhase3Pop.Builder setChiSquare(float value) {
      validate(fields()[2], value);
      this.chiSquare = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'chiSquare' field has been set */
    public boolean hasChiSquare() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'chiSquare' field */
    public Gel_BioInf_Models.ChiSquare1KGenomesPhase3Pop.Builder clearChiSquare() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public ChiSquare1KGenomesPhase3Pop build() {
      try {
        ChiSquare1KGenomesPhase3Pop record = new ChiSquare1KGenomesPhase3Pop();
        record.kGSuperPopCategory = fieldSetFlags()[0] ? this.kGSuperPopCategory : (Gel_BioInf_Models.KGSuperPopCategory) defaultValue(fields()[0]);
        record.kGPopCategory = fieldSetFlags()[1] ? this.kGPopCategory : (Gel_BioInf_Models.KGPopCategory) defaultValue(fields()[1]);
        record.chiSquare = fieldSetFlags()[2] ? this.chiSquare : (java.lang.Float) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
